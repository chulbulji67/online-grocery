spring:
  cloud:
    gateway:
      routes:
        - id: user-service
          uri: http://localhost:8080
          predicates:
            - Path=/api/users/**
        - id: product-service
          uri: http://localhost:8081
          predicates:
            - Path=/api/products/**
          filters:
            - name: JwtAuthenticationFilter
        - id: inventory-service
          uri: http://localhost:8082
          predicates:
            - Path=/api/inventory/**
          filters:
            - name: JwtAuthenticationFilter
        - id: notification-service
          uri: http://localhost:8085
          predicates:
            - Path=/api/notifications/**
          filters:
            - name: JwtAuthenticationFilter
        - id: order-service
          uri: http://localhost:8083
          predicates:
            - Path=/api/orders/**
          filters:
            - name: JwtAuthenticationFilter
        - id: payment-service
          uri: http://localhost:8084
          predicates:
            - Path=/api/payments/**
          filters:
            - name: JwtAuthenticationFilter




---


spring:
  application:
    name: API-GATEWAY # Name of your microservice, visible in Eureka dashboard

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/ # URL of the Eureka server
    register-with-eureka: true                   # Register this service with Eureka
    fetch-registry: true                         # Fetch the registry of other services

  instance:
    prefer-ip-address: true                      # Use IP address instead of hostname for service registration
    instance-id: ${spring.application.name}:${spring.cloud.client.hostname}:${server.port} # Unique identifier for this instance


